// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package usercenter

import (
	"context"

	"zero-cloud-disk/app/user-rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserEmailReq    = pb.UserEmailReq
	UserEmailRes    = pb.UserEmailRes
	UserInfoReq     = pb.UserInfoReq
	UserInfoRes     = pb.UserInfoRes
	UserLoginReq    = pb.UserLoginReq
	UserLoginRes    = pb.UserLoginRes
	UserRegisterReq = pb.UserRegisterReq
	UserRegisterRes = pb.UserRegisterRes

	Usercenter interface {
		UserRegister(ctx context.Context, in *UserRegisterReq, opts ...grpc.CallOption) (*UserRegisterRes, error)
		SendEmail(ctx context.Context, in *UserEmailReq, opts ...grpc.CallOption) (*UserEmailRes, error)
		GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoRes, error)
		UserLogin(ctx context.Context, in *UserLoginReq, opts ...grpc.CallOption) (*UserLoginRes, error)
	}

	defaultUsercenter struct {
		cli zrpc.Client
	}
)

func NewUsercenter(cli zrpc.Client) Usercenter {
	return &defaultUsercenter{
		cli: cli,
	}
}

func (m *defaultUsercenter) UserRegister(ctx context.Context, in *UserRegisterReq, opts ...grpc.CallOption) (*UserRegisterRes, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.UserRegister(ctx, in, opts...)
}

func (m *defaultUsercenter) SendEmail(ctx context.Context, in *UserEmailReq, opts ...grpc.CallOption) (*UserEmailRes, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.SendEmail(ctx, in, opts...)
}

func (m *defaultUsercenter) GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoRes, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultUsercenter) UserLogin(ctx context.Context, in *UserLoginReq, opts ...grpc.CallOption) (*UserLoginRes, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.UserLogin(ctx, in, opts...)
}
